{"version":3,"sources":["hn/api.ts","themes/theme.ts","components/Item.tsx","components/List.tsx","components/Comment.tsx","components/LoadingSpinner.tsx","components/ItemPage.tsx","components/Header.tsx","components/UserPage.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["EListTypes","apiEndpoint","concat","listCache","itemCache","listTypes","topstories","newstories","beststories","askstories","showstories","jobstories","HNAPI","Object","classCallCheck","this","createClass","key","value","_getList","asyncToGenerator","regenerator_default","a","mark","_callee","type","res","wrap","_context","prev","next","abrupt","Promise","resolve","apiRequest","sent","keys","length","forEach","list","getList","stop","_x","apply","arguments","_getItem","_callee2","id","_context2","_x2","_callee3","request","_context3","fetch","then","json","lightTheme","backgroundColor","colors","Item","marginTop","color","item","props","link","url","react_default","createElement","style","href","data","document","hostname","url_domain","title","kids","Link","to","position","getStyle","renderHeader","getSubStyle","score","by","distanceInWordsToNow","time","renderCommentInfo","Component","List","_this","possibleConstructorReturn","getPrototypeOf","call","state","stories","page","_this2","query","queryString","parse","window","location","search","p","parseInt","listFunction","slice","all","map","getItem","setState","_this3","height","getRandomInt","max","Math","floor","random","ghostElements","Array","fill","_","objectSpread","width","borderRadius","index","components_Item","renderStories","Comment","showChildren","children","comments","c","i","paddingLeft","borderLeft","textDecoration","cursor","onClick","kid","dayjs","diff","dangerouslySetInnerHTML","__html","text","renderChildren","LoadingSpinner","className","ItemPage","components_Comment","margin","components_LoadingSpinner","renderComments","Header","display","justifyContent","fontSize","alignItems","marginRight","label","NavLink","activeStyle","exact","getLinkStyle","getInnerStyle","renderLink","UserPage","getUser","karma","created","about","App","BrowserRouter","basename","getBackgroundStyle","components_Header","Switch","Route","path","component","components_List","isLocalhost","Boolean","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dfbf0a73.chunk.js","sourcesContent":["import { IItem, IUser } from \"./interfaces\";\r\nimport { getMaxListeners } from \"cluster\";\r\n\r\nexport const apiUrl = \"https://hacker-news.firebaseio.com\";\r\nexport const apiVersion = \"v0\";\r\nexport const apiEndpoint = `${apiUrl}/${apiVersion}`;\r\n\r\nconst listCache: { [list: string]: number[] } = {}\r\nconst itemCache: { [id: number]: IItem } = {};\r\n\r\nexport enum EListTypes {\r\n\ttopstories = \"topstories\",\r\n\tnewstories = \"newstories\",\r\n\tbeststories = \"beststories\",\r\n\taskstories = \"askstories\",\r\n\tshowstories = \"showstories\",\r\n\tjobstories = \"jobstories\"\r\n}\r\n\r\nconst listTypes = [\r\n\tEListTypes.topstories,\r\n\tEListTypes.newstories,\r\n\tEListTypes.beststories,\r\n\tEListTypes.askstories,\r\n\tEListTypes.showstories,\r\n\tEListTypes.jobstories\r\n];\r\n\r\nexport class HNAPI {\r\n\r\n\tstatic async getList(type: EListTypes): Promise<number[]> {\r\n\r\n\t\tif (listCache[type]) {\r\n\t\t\treturn Promise.resolve(listCache[type]);\r\n\t\t}\r\n\r\n\t\tconst res = await apiRequest(type);\r\n\r\n\t\t// If this is our first list, resolve it then go ahead and pre-cache everything else.\r\n\t\tif (Object.keys(listCache).length === 0) {\r\n\t\t\tlistTypes.forEach(list => {\r\n\t\t\t\tif (list === type) return; // already getting this\r\n\t\t\t\tHNAPI.getList(list);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlistCache[type] = res;\r\n\t\treturn res;\r\n\t}\r\n\r\n\tstatic async getItem(id: number): Promise<IItem> {\r\n\t\tif (itemCache[id]) {\r\n\t\t\treturn Promise.resolve(itemCache[id]);\r\n\t\t}\r\n\r\n\t\tconst res = await apiRequest(`item/${id}`);\r\n\t\titemCache[id] = res;\r\n\t\treturn res;\r\n\t}\r\n\r\n\tstatic getUser(id: string): Promise<IUser> {\r\n\t\treturn apiRequest(`user/${id}`)\r\n\t}\r\n\r\n\tstatic getMaxItem(): Promise<number> {\r\n\t\treturn apiRequest(\"maxitem\");\r\n\t}\r\n}\r\n\r\nasync function apiRequest(request: string): Promise<any> {\r\n\treturn fetch(`${apiEndpoint}/${request}.json`).then(res => res.json());\r\n}","type ITheme = { [key: string]: React.CSSProperties }\r\n\r\nexport const lightTheme: ITheme = {\r\n    background: {\r\n        backgroundColor: \"white\"\r\n    }\r\n}\r\n\r\nexport const darkTheme: ITheme = {\r\n    background: {\r\n        backgroundColor: \"black\"\r\n    }\r\n}\r\n\r\nexport const colors = {\r\n    highlight: \"#906A42\",\r\n    subtle: \"#2B4E5A\",\r\n    light: \"#6c6f7d\",\r\n    dark: \"#2e3138\"\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IItem } from '../hn/interfaces';\r\nimport dayjs from \"dayjs\";\r\nimport { colors } from '../themes/theme';\r\n\r\nimport { distanceInWordsToNow } from \"date-fns\";\r\n\r\nfunction url_domain(data: string) {\r\n\tvar a = document.createElement(\"a\");\r\n\ta.href = data;\r\n\treturn a.hostname;\r\n}\r\n\r\nclass Item extends Component<{ item: IItem }, any> {\r\n\r\n\tgetStyle(): React.CSSProperties {\r\n\t\treturn {\r\n\t\t\tmarginTop: \"5px\"\r\n\t\t}\r\n\t}\r\n\r\n\tgetSubStyle(): React.CSSProperties {\r\n\t\treturn {\r\n\t\t\tcolor: colors.light\r\n\t\t}\r\n\t}\r\n\r\n\trenderHeader() {\r\n\t\tconst item = this.props.item;\r\n\r\n\t\tconst link = item.url ? <a style={{ color: colors.light }} href=\"\">({url_domain(item.url)})</a> : null;\r\n\r\n\t\treturn (\r\n\t\t\t<span>\r\n\t\t\t\t<a href={item.url}>{item.title}</a> {link}\r\n\t\t\t</span>\r\n\t\t);\r\n\t}\r\n\r\n\trenderCommentInfo() {\r\n\t\tconst item = this.props.item;\r\n\t\tif (!item.kids) {\r\n\t\t\treturn <span> | no comments</span>;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<span> <Link style={{ color: colors.highlight }} to={`/item?id=${item.id}`}>{item.kids.length} comment{item.kids.length === 1 ? \"\" : \"s\"}</Link></span>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst item = this.props.item;\r\n\t\treturn (\r\n\t\t\t<div style={{ position: \"relative\" }}>\r\n\t\t\t\t{/* <div style={{ position: \"absolute\", left: \"-40px\", right: \"0\", color: colors.light }}>{item.index}</div> */}\r\n\r\n\t\t\t\t<div style={this.getStyle()}>\r\n\t\t\t\t\t{this.renderHeader()}\r\n\t\t\t\t\t<div style={this.getSubStyle()}>\r\n\t\t\t\t\t\t<span>{item.score} points</span>\r\n\t\t\t\t\t\t<span> by <Link style={{ color: colors.highlight }} to={`/user?id=${item.by}`}>{item.by}</Link></span>\r\n\t\t\t\t\t\t<span> {distanceInWordsToNow(item.time * 1000)} ago</span>\r\n\t\t\t\t\t\t{this.renderCommentInfo()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Item;\r\n","import React, { Component } from 'react';\r\nimport { HNAPI, EListTypes } from '../hn/api';\r\nimport Item from './Item';\r\nimport { IItem } from '../hn/interfaces';\r\nimport queryString from \"query-string\";\r\nimport { Link } from 'react-router-dom';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport { colors } from '../themes/theme';\r\n\r\ninterface IProps {\r\n\tlistFunction: () => Promise<number[]>;\r\n\tlocation?: any;\r\n}\r\n\r\ninterface IState {\r\n\tstories: IItem[];\r\n\tpage: number;\r\n}\r\n\r\nclass List extends Component<IProps, IState> {\r\n\r\n\tconstructor(props: any) {\r\n\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tstories: [],\r\n\t\t\tpage: 1\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst query = queryString.parse(window.location.search)\r\n\t\tconst page = query.p ? (parseInt(query.p as string) - 1) * 30 : 0\r\n\t\tconst data = this.props.listFunction ? this.props.listFunction : () => HNAPI.getList(EListTypes.topstories);\r\n\r\n\r\n\r\n\t\tdata().then(json => {\r\n\t\t\tjson = json.slice(page, page + 30);\r\n\t\t\tPromise.all(json.map(id => HNAPI.getItem(id))).then(res => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tstories: res\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst renderStories = () => {\r\n\t\t\tif (this.state.stories.length === 0) {\r\n\r\n\t\t\t\tconst style = {\r\n\t\t\t\t\tcolor: \"#ccc\",\r\n\t\t\t\t\theight: \"21.6px\",\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst getRandomInt = (max: number) => {\r\n\t\t\t\t\treturn Math.floor(Math.random() * Math.floor(max));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst ghostElements = Array(30).fill(0).map((_, key) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div style={{ marginTop: \"5px\" }}>\r\n\t\t\t\t\t\t\t<div style={{ ...style, width: 500 + getRandomInt(200) + \"px\" }}>\r\n\t\t\t\t\t\t\t\t<div style={{ borderRadius: \"10px\", height: \"90%\", width: \"90%\", backgroundColor: \"#ccc\" }}></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div style={{ ...style, width: 300 + getRandomInt(100) + \"px\", }}>\r\n\t\t\t\t\t\t\t\t<div style={{ borderRadius: \"10px\", height: \"90%\", width: \"90%\", backgroundColor: \"#ccc\" }}></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{ghostElements}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.state.stories.map((item, index) => {\r\n\t\t\t\tif (!item) return;\r\n\t\t\t\titem.index = (index + (this.state.page - 1) * 30) + 1;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Item key={index} item={item} />\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{renderStories()}\r\n\t\t\t\t{/* <div>\r\n\t\t\t\t\t<Link to={{ pathname: window.location.pathname, search: `p=${this.state.page + 1}` }}>Next Page</Link>\r\n\t\t\t\t</div> */}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IItem } from '../hn/interfaces';\r\n\r\nimport dayjs from \"dayjs\";\r\nimport { HNAPI } from '../hn/api';\r\nimport { colors } from '../themes/theme';\r\n\r\ninterface IState {\r\n    showChildren: boolean;\r\n    children: IItem[];\r\n}\r\n\r\nclass Comment extends Component<{ item: IItem }, IState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            showChildren: false,\r\n            children: []\r\n        }\r\n    }\r\n\r\n    renderChildren() {\r\n        const item = this.props.item;\r\n        const kids = item.kids;\r\n\r\n        if (!kids) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.showChildren && this.state.children) {\r\n            const comments = this.state.children.map((c, i) =>\r\n                (\r\n                    <div>\r\n                        <hr />\r\n                        <Comment key={i} item={c} />\r\n                    </div>\r\n                )\r\n            );\r\n            return (\r\n                <div style={{ paddingLeft: \"20px\", borderLeft: \"2px dashed #888\" }}>\r\n                    {comments}\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return <a style={{ color: colors.highlight, textDecoration: \"underline\", cursor: \"pointer\" }} onClick={() => this.showChildren()}>{item.kids.length} comment{item.kids.length === 1 ? \"\" : \"s\"}</a>;\r\n        }\r\n    }\r\n\r\n    showChildren() {\r\n        const kids = this.props.item.kids;\r\n        const comments = Promise.all(kids.map(kid => HNAPI.getItem(kid)));\r\n        comments.then(res => {\r\n            this.setState({\r\n                ...this.state,\r\n                showChildren: true,\r\n                children: res\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        const item = this.props.item;\r\n\r\n        if (!item) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <span><Link style={{ color: colors.highlight }} to={`/user?id=${item.by}`}>{item.by}</Link> </span>\r\n                    <span style={{ color: colors.light }}>{dayjs().diff(dayjs(item.time * 1000), \"hour\")} hours ago</span>\r\n                </div>\r\n                <div dangerouslySetInnerHTML={{ __html: item.text }} />\r\n                <div style={{ marginTop: \"10px\" }}>{this.renderChildren()}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Comment;\r\n","import React, { Component } from 'react';\r\n\r\nclass LoadingSpinner extends Component<any, any> {\r\n    render() {\r\n        return <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n    }\r\n}\r\n\r\nexport default LoadingSpinner;\r\n","import React, { Component } from 'react';\r\nimport queryString from \"query-string\";\r\nimport { HNAPI } from '../hn/api';\r\nimport { IItem } from '../hn/interfaces';\r\nimport Comment from \"./Comment\";\r\nimport Item from './Item';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nclass ItemPage extends Component<any, IItem> {\r\n\r\n\tcomponentWillMount() {\r\n\t\tconst query = queryString.parse(this.props.location.search)\r\n\t\tif (!query.id || !(typeof query.id == \"string\")) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tHNAPI.getItem(parseInt(query.id)).then(item => {\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\t...item\r\n\t\t\t});\r\n\r\n\t\t\tconst kids = item.kids.map(kid => HNAPI.getItem(kid));\r\n\r\n\t\t\tPromise.all(kids).then(comments => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t...item,\r\n\t\t\t\t\tcomments\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\trenderComments() {\r\n\t\tconst comments = this.state.comments;\r\n\r\n\t\tif (!comments) {\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{ width: \"64px\", height: \"64px\", margin: \"64px auto\" }}>\r\n\t\t\t\t\t<LoadingSpinner />\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn comments.map((item, index) =>\r\n\t\t\t<div key={index} >\r\n\t\t\t\t<Comment item={item} />\r\n\t\t\t\t{index !== comments.length - 1 ? <hr /> : null}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\r\n\r\n\t\tif (!this.state) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>loading...</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Item item={this.state} />\r\n\t\t\t\t{this.state.text ? <div dangerouslySetInnerHTML={{ __html: this.state.text }} /> : null}\r\n\t\t\t\t<div style={{ marginTop: \"10px\" }}>\r\n\t\t\t\t\t{this.renderComments()}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ItemPage;\r\n","import React, { Component } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { colors } from '../themes/theme';\r\n\r\nclass Header extends Component {\r\n    getStyle(): React.CSSProperties {\r\n        return {\r\n            width: \"100%\",\r\n            backgroundColor: colors.subtle,\r\n            height: \"30px\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            fontSize: \"1.2em\"\r\n        }\r\n    }\r\n\r\n    getInnerStyle(): React.CSSProperties {\r\n        return {\r\n            width: \"800px\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            margin: \"0 auto\",\r\n            height: \"100%\"\r\n        }\r\n    }\r\n\r\n    getLinkStyle(): React.CSSProperties {\r\n        return {\r\n            color: \"#ccc\",\r\n            marginRight: \"10px\"\r\n        }\r\n    }\r\n\r\n    renderLink(to: string, label: any) {\r\n        return <NavLink activeStyle={{ color: \"white\" }} exact={true} to={to} style={this.getLinkStyle()}>{label}</NavLink>;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header style={this.getStyle()}>\r\n                <div style={this.getInnerStyle()}>\r\n                    {/* <img style={{ border: \"1px white solid\", marginRight: \"10px\" }} src=\"https://news.ycombinator.com/y18.gif\"></img> */}\r\n                    {this.renderLink(\"/\", \"YAHN\")}\r\n                    {this.renderLink(\"/new\", \"new\")}\r\n                    {this.renderLink(\"/ask\", \"ask\")}\r\n                    {this.renderLink(\"/show\", \"show\")}\r\n                    {this.renderLink(\"/jobs\", \"jobs\")}\r\n                </div>\r\n\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport queryString from \"query-string\";\r\nimport { HNAPI } from '../hn/api';\r\nimport { IItem, IUser } from '../hn/interfaces';\r\nimport Comment from \"./Comment\";\r\nimport { number } from 'prop-types';\r\n\r\nclass UserPage extends Component<any, IUser> {\r\n\r\n    componentWillMount() {\r\n        const query = queryString.parse(this.props.location.search)\r\n        if (!(query.id && (typeof query.id == \"string\"))) {\r\n            return;\r\n        }\r\n\r\n        HNAPI.getUser(query.id).then(item => {\r\n            this.setState(item);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const renderComments = (comments: IItem[]) => comments.map((item, index) => (\r\n            <Comment item={item} key={index} />\r\n        ));\r\n\r\n        if (!this.state) {\r\n            return (\r\n                <div>loading...</div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div style={{ marginTop: \"10px\" }}>\r\n                <div>id: {this.state.id}</div>\r\n                <div>karma: {this.state.karma}</div>\r\n                <div>created: {this.state.created}</div>\r\n                <div>about: <div dangerouslySetInnerHTML={{ __html: this.state.about }} /></div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserPage;\r\n","import React, { Component } from 'react';\r\nimport List from './List';\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport ItemPage from './ItemPage';\r\nimport Header from './Header';\r\nimport UserPage from './UserPage';\r\nimport { HNAPI, EListTypes } from '../hn/api';\r\nimport { lightTheme, darkTheme } from '../themes/theme';\r\n\r\nclass App extends Component {\r\n\tgetStyle(): React.CSSProperties {\r\n\t\treturn {\r\n\t\t\twidth: \"800px\",\r\n\t\t\tmargin: \"0 auto 200px\"\r\n\t\t}\r\n\t}\r\n\r\n\tgetBackgroundStyle(): React.CSSProperties {\r\n\t\treturn {\r\n\t\t\tbackgroundColor: lightTheme.background.backgroundColor\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Router basename=\"/yahn/\">\r\n\t\t\t\t<article style={this.getBackgroundStyle()}>\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<main style={this.getStyle()}>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={List} />\r\n\t\t\t\t\t\t\t<Route path=\"/item\" component={ItemPage} />\r\n\t\t\t\t\t\t\t<Route path=\"/user\" component={UserPage} />\r\n\t\t\t\t\t\t\t<Route path=\"/new\" component={() => <List listFunction={() => HNAPI.getList(EListTypes.newstories)} />} />\r\n\t\t\t\t\t\t\t<Route path=\"/ask\" component={() => <List listFunction={() => HNAPI.getList(EListTypes.askstories)} />} />\r\n\t\t\t\t\t\t\t<Route path=\"/show\" component={() => <List listFunction={() => HNAPI.getList(EListTypes.showstories)} />} />\r\n\t\t\t\t\t\t\t<Route path=\"/jobs\" component={() => <List listFunction={() => HNAPI.getList(EListTypes.jobstories)} />} />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</article>\r\n\t\t\t</Router>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}