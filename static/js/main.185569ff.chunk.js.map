{"version":3,"sources":["hn/api.ts","components/Item.tsx","components/LoadingSpinner.tsx","components/List.tsx","components/Comment.tsx","components/ItemPage.tsx","components/Header.tsx","components/UserPage.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["EListTypes","apiEndpoint","concat","listCache","itemCache","listTypes","topstories","newstories","beststories","askstories","showstories","jobstories","HNAPI","Object","classCallCheck","this","createClass","key","value","_getList","asyncToGenerator","regenerator_default","a","mark","_callee","type","res","wrap","_context","prev","next","abrupt","Promise","resolve","apiRequest","sent","keys","length","forEach","list","getList","stop","_x","apply","arguments","_getItem","_callee2","id","_context2","_x2","_callee3","request","_context3","fetch","then","json","Item","marginTop","color","item","props","kids","react_default","createElement","Link","style","to","getStyle","href","url","title","data","document","hostname","url_domain","getSubStyle","score","by","dayjs","diff","time","renderCommentInfo","Component","LoadingSpinner","className","List","_this","possibleConstructorReturn","getPrototypeOf","call","state","stories","page","_this2","query","queryString","parse","window","location","search","p","parseInt","listFunction","slice","all","map","getItem","setState","_this3","width","height","margin","components_LoadingSpinner","index","components_Item","Comment","showChildren","children","comments","c","i","marginLeft","textDecoration","cursor","onClick","kid","objectSpread","dangerouslySetInnerHTML","__html","text","renderChildren","ItemPage","components_Comment","renderComments","Header","backgroundColor","display","justifyContent","alignItems","marginRight","label","NavLink","activeStyle","exact","getLinkStyle","getInnerStyle","border","textAlign","renderLink","UserPage","getUser","karma","created","about","App","BrowserRouter","components_Header","Switch","Route","path","component","components_List","isLocalhost","Boolean","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.185569ff.chunk.js","sourcesContent":["import { IItem, IUser } from \"./interfaces\";\r\nimport { getMaxListeners } from \"cluster\";\r\n\r\nexport const apiUrl = \"https://hacker-news.firebaseio.com\";\r\nexport const apiVersion = \"v0\";\r\nexport const apiEndpoint = `${apiUrl}/${apiVersion}`;\r\n\r\nconst listCache: { [list: string]: number[] } = {}\r\nconst itemCache: { [id: number]: IItem } = {};\r\n\r\nexport enum EListTypes {\r\n\ttopstories = \"topstories\",\r\n\tnewstories = \"newstories\",\r\n\tbeststories = \"beststories\",\r\n\taskstories = \"askstories\",\r\n\tshowstories = \"showstories\",\r\n\tjobstories = \"jobstories\"\r\n}\r\n\r\nconst listTypes = [\r\n\tEListTypes.topstories,\r\n\tEListTypes.newstories,\r\n\tEListTypes.beststories,\r\n\tEListTypes.askstories,\r\n\tEListTypes.showstories,\r\n\tEListTypes.jobstories\r\n];\r\n\r\nexport class HNAPI {\r\n\r\n\tstatic async getList(type: EListTypes): Promise<number[]> {\r\n\r\n\t\tif (listCache[type]) {\r\n\t\t\treturn Promise.resolve(listCache[type]);\r\n\t\t}\r\n\r\n\t\tconst res = await apiRequest(type);\r\n\r\n\t\t// If this is our first list, resolve it then go ahead and pre-cache everything else.\r\n\t\tif (Object.keys(listCache).length === 0) {\r\n\t\t\tlistTypes.forEach(list => {\r\n\t\t\t\tif (list === type) return; // already getting this\r\n\t\t\t\tHNAPI.getList(list);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlistCache[type] = res;\r\n\t\treturn res;\r\n\t}\r\n\r\n\tstatic async getItem(id: number): Promise<IItem> {\r\n\t\tif (itemCache[id]) {\r\n\t\t\treturn Promise.resolve(itemCache[id]);\r\n\t\t}\r\n\r\n\t\tconst res = await apiRequest(`item/${id}`);\r\n\t\titemCache[id] = res;\r\n\t\treturn res;\r\n\t}\r\n\r\n\tstatic getUser(id: string): Promise<IUser> {\r\n\t\treturn apiRequest(`user/${id}`)\r\n\t}\r\n\r\n\tstatic getMaxItem(): Promise<number> {\r\n\t\treturn apiRequest(\"maxitem\");\r\n\t}\r\n}\r\n\r\nasync function apiRequest(request: string): Promise<any> {\r\n\treturn fetch(`${apiEndpoint}/${request}.json`).then(res => res.json());\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IItem } from '../hn/interfaces';\r\nimport dayjs from \"dayjs\";\r\n\r\nclass Item extends Component<{ item: IItem }, any> {\r\n\r\n\tgetStyle(): React.CSSProperties {\r\n\t\treturn {\r\n\t\t\tmarginTop: \"5px\"\r\n\t\t}\r\n\t}\r\n\r\n\tgetSubStyle(): React.CSSProperties {\r\n\t\treturn {\r\n\t\t\tcolor: \"#444\"\r\n\t\t}\r\n\t}\r\n\r\n\trenderCommentInfo() {\r\n\t\tconst item = this.props.item;\r\n\t\tif (!item.kids) {\r\n\t\t\treturn <span> | no comments</span>;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<span> | <Link style={{ color: \"#444\" }} to={`/yahn/item?id=${item.id}`}>{item.kids.length} comment{item.kids.length === 1 ? \"\" : \"s\"}</Link></span>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tfunction url_domain(data: string) {\r\n\t\t\tvar a = document.createElement(\"a\");\r\n\t\t\ta.href = data;\r\n\t\t\treturn a.hostname;\r\n\t\t}\r\n\r\n\t\tconst item = this.props.item;\r\n\t\treturn (\r\n\t\t\t<div style={this.getStyle()}>\r\n\t\t\t\t<span><a href={item.url}>{item.title}</a> <a style={{ color: \"#444\" }} href=\"\">({url_domain(item.url)})</a></span>\r\n\t\t\t\t<div style={this.getSubStyle()}>\r\n\t\t\t\t\t<span>{item.score} points</span>\r\n\t\t\t\t\t<span> by <Link style={{ color: \"#444\" }} to={`/yahn/user?id=${item.by}`}>{item.by}</Link></span>\r\n\t\t\t\t\t<span> {dayjs().diff(dayjs(item.time * 1000), \"hour\")} hours ago</span>\r\n\t\t\t\t\t{this.renderCommentInfo()}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Item;\r\n","import React, { Component } from 'react';\r\n\r\nclass LoadingSpinner extends Component<any, any> {\r\n    render() {\r\n        return <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n    }\r\n}\r\n\r\nexport default LoadingSpinner;\r\n","import React, { Component } from 'react';\r\nimport { HNAPI, EListTypes } from '../hn/api';\r\nimport Item from './Item';\r\nimport { IItem } from '../hn/interfaces';\r\nimport queryString from \"query-string\";\r\nimport { Link } from 'react-router-dom';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\ninterface IProps {\r\n\tlistFunction: () => Promise<number[]>;\r\n\tlocation?: any;\r\n}\r\n\r\ninterface IState {\r\n\tstories: IItem[];\r\n\tpage: number;\r\n}\r\n\r\nclass List extends Component<IProps, IState> {\r\n\r\n\tconstructor(props: any) {\r\n\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tstories: [],\r\n\t\t\tpage: 1\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst query = queryString.parse(window.location.search)\r\n\t\tconst page = query.p ? (parseInt(query.p as string) - 1) * 30 : 0\r\n\t\tconst data = this.props.listFunction ? this.props.listFunction : () => HNAPI.getList(EListTypes.topstories);\r\n\r\n\r\n\r\n\t\tdata().then(json => {\r\n\t\t\tjson = json.slice(page, page + 30);\r\n\t\t\tPromise.all(json.map(id => HNAPI.getItem(id))).then(res => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tstories: res\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst renderStories = () => {\r\n\t\t\tif (this.state.stories.length === 0) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div style={{ width: \"64px\", height: \"64px\", margin: \"64px auto\" }}>\r\n\t\t\t\t\t\t<LoadingSpinner />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.state.stories.map((item, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Item key={index} item={item} />\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{renderStories()}\r\n\t\t\t\t{/* <div>\r\n\t\t\t\t\t<Link to={{ pathname: window.location.pathname, search: `p=${this.state.page + 1}` }}>Next Page</Link>\r\n\t\t\t\t</div> */}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IItem } from '../hn/interfaces';\r\n\r\nimport dayjs from \"dayjs\";\r\nimport { HNAPI } from '../hn/api';\r\n\r\ninterface IState {\r\n    showChildren: boolean;\r\n    children: IItem[];\r\n}\r\n\r\nclass Comment extends Component<{ item: IItem }, IState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            showChildren: false,\r\n            children: []\r\n        }\r\n    }\r\n\r\n    renderChildren() {\r\n        const item = this.props.item;\r\n        const kids = item.kids;\r\n\r\n        if (!kids) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.showChildren && this.state.children) {\r\n            const comments = this.state.children.map((c, i) => <Comment key={i} item={c} />);\r\n            return (\r\n                <div style={{ marginLeft: \"20px\" }}>\r\n                    {comments}\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return <a style={{ color: \"#444\", textDecoration: \"underline\", cursor: \"pointer\" }} onClick={() => this.showChildren()}>{item.kids.length} comments</a>;\r\n        }\r\n    }\r\n\r\n    showChildren() {\r\n        const kids = this.props.item.kids;\r\n        const comments = Promise.all(kids.map(kid => HNAPI.getItem(kid)));\r\n        comments.then(res => {\r\n            this.setState({\r\n                ...this.state,\r\n                showChildren: true,\r\n                children: res\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        const item = this.props.item;\r\n\r\n        if (!item) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div style={{ color: \"#444\" }}>{item.by} {dayjs().diff(dayjs(item.time * 1000), \"hour\")} hours ago</div>\r\n                <div dangerouslySetInnerHTML={{ __html: item.text }} />\r\n                <div style={{ marginTop: \"10px\" }}>{this.renderChildren()}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Comment;\r\n","import React, { Component } from 'react';\r\nimport queryString from \"query-string\";\r\nimport { HNAPI } from '../hn/api';\r\nimport { IItem } from '../hn/interfaces';\r\nimport Comment from \"./Comment\";\r\nimport Item from './Item';\r\nimport LoadingSpinner from './LoadingSpinner';\r\n\r\nclass ItemPage extends Component<any, IItem> {\r\n\r\n\tcomponentWillMount() {\r\n\t\tconst query = queryString.parse(this.props.location.search)\r\n\t\tif (!query.id || !(typeof query.id == \"string\")) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tHNAPI.getItem(parseInt(query.id)).then(item => {\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\t...item\r\n\t\t\t});\r\n\r\n\t\t\tconst kids = item.kids.map(kid => HNAPI.getItem(kid));\r\n\r\n\t\t\tPromise.all(kids).then(comments => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t...item,\r\n\t\t\t\t\tcomments\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\trenderComments() {\r\n\t\tconst comments = this.state.comments;\r\n\r\n\t\tif (!comments) {\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{ width: \"64px\", height: \"64px\", margin: \"64px auto\" }}>\r\n\t\t\t\t\t<LoadingSpinner />\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn comments.map((item, index) =>\r\n\t\t\t<div key={index} >\r\n\t\t\t\t<Comment item={item} />\r\n\t\t\t\t{index !== comments.length - 1 ? <hr /> : null}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\r\n\r\n\t\tif (!this.state) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>loading...</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Item item={this.state} />\r\n\t\t\t\t{this.state.text ? <div dangerouslySetInnerHTML={{ __html: this.state.text }} /> : null}\r\n\t\t\t\t<div style={{ marginTop: \"10px\" }}>\r\n\t\t\t\t\t{this.renderComments()}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ItemPage;\r\n","import React, { Component } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    getStyle(): React.CSSProperties {\r\n        return {\r\n            width: \"100%\",\r\n            backgroundColor: \"#ff6600\",\r\n            height: \"30px\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\"\r\n        }\r\n    }\r\n\r\n    getInnerStyle(): React.CSSProperties {\r\n        return {\r\n            width: \"800px\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            margin: \"0 auto\",\r\n            height: \"100%\"\r\n        }\r\n    }\r\n\r\n    getLinkStyle(): React.CSSProperties {\r\n        return {\r\n            color: \"black\",\r\n            marginRight: \"10px\"\r\n        }\r\n    }\r\n\r\n    renderLink(to: string, label: any) {\r\n        return <NavLink activeStyle={{ color: \"white\" }} exact={true} to={to} style={this.getLinkStyle()}>{label}</NavLink>;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header style={this.getStyle()}>\r\n                <div style={this.getInnerStyle()}>\r\n                    <Link to=\"/yahn\" style={{ marginRight: \"10px\", color: \"white\", border: \"1px white solid\", width: \"20px\", height: \"20px\", textAlign: \"center\" }}>Y</Link>\r\n                    {/* <img style={{ border: \"1px white solid\", marginRight: \"10px\" }} src=\"https://news.ycombinator.com/y18.gif\"></img> */}\r\n                    {this.renderLink(\"/yahn\", \"YAHN\")}\r\n                    {this.renderLink(\"/yahn/new\", \"new\")}\r\n                    {this.renderLink(\"/yahn/ask\", \"ask\")}\r\n                    {this.renderLink(\"/yahn/show\", \"show\")}\r\n                    {this.renderLink(\"/yahn/jobs\", \"jobs\")}\r\n                </div>\r\n\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport queryString from \"query-string\";\r\nimport { HNAPI } from '../hn/api';\r\nimport { IItem, IUser } from '../hn/interfaces';\r\nimport Comment from \"./Comment\";\r\nimport { number } from 'prop-types';\r\n\r\nclass UserPage extends Component<any, IUser> {\r\n\r\n    componentWillMount() {\r\n        const query = queryString.parse(this.props.location.search)\r\n        if (!(query.id && (typeof query.id == \"string\"))) {\r\n            return;\r\n        }\r\n\r\n        HNAPI.getUser(query.id).then(item => {\r\n            this.setState(item);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const renderComments = (comments: IItem[]) => comments.map((item, index) => (\r\n            <Comment item={item} key={index} />\r\n        ));\r\n\r\n        if (!this.state) {\r\n            return (\r\n                <div>loading...</div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div style={{ marginTop: \"10px\" }}>\r\n                <div>id: {this.state.id}</div>\r\n                <div>karma: {this.state.karma}</div>\r\n                <div>created: {this.state.created}</div>\r\n                <div>about: <div dangerouslySetInnerHTML={{ __html: this.state.about }} /></div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserPage;\r\n","import React, { Component } from 'react';\r\nimport List from './List';\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport ItemPage from './ItemPage';\r\nimport Header from './Header';\r\nimport UserPage from './UserPage';\r\nimport { HNAPI, EListTypes } from '../hn/api';\r\n\r\nclass App extends Component {\r\n\tgetStyle(): React.CSSProperties {\r\n\t\treturn {\r\n\t\t\twidth: \"800px\",\r\n\t\t\tmargin: \"0 auto 200px\"\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Router>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<main style={this.getStyle()}>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path=\"/yahn\" component={List} />\r\n\t\t\t\t\t\t\t<Route path=\"/yahn/item\" component={ItemPage} />\r\n\t\t\t\t\t\t\t<Route path=\"/yahn/user\" component={UserPage} />\r\n\t\t\t\t\t\t\t<Route path=\"/yahn/new\" component={() => <List listFunction={() => HNAPI.getList(EListTypes.newstories)} />} />\r\n\t\t\t\t\t\t\t<Route path=\"/yahn/ask\" component={() => <List listFunction={() => HNAPI.getList(EListTypes.askstories)} />} />\r\n\t\t\t\t\t\t\t<Route path=\"/yahn/show\" component={() => <List listFunction={() => HNAPI.getList(EListTypes.showstories)} />} />\r\n\t\t\t\t\t\t\t<Route path=\"/yahn/jobs\" component={() => <List listFunction={() => HNAPI.getList(EListTypes.jobstories)} />} />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}