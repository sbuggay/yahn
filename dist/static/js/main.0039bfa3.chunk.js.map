{"version":3,"sources":["hn/api.ts","components/Item.tsx","components/List.tsx","components/Comment.tsx","components/ItemPage.tsx","components/Header.tsx","components/UserPage.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["EListTypes","apiEndpoint","concat","listCache","itemCache","listTypes","topstories","newstories","beststories","askstories","showstories","jobstories","HNAPI","Object","classCallCheck","this","createClass","key","value","_getList","asyncToGenerator","regenerator_default","a","mark","_callee","type","res","wrap","_context","prev","next","abrupt","Promise","resolve","apiRequest","sent","keys","length","forEach","list","getList","stop","_x","apply","arguments","_getItem","_callee2","id","_context2","_x2","_callee3","request","_context3","fetch","then","json","Item","marginTop","color","item","props","react_default","createElement","style","getStyle","href","url","title","getSubStyle","score","Link","to","by","dayjs","diff","time","kids","Component","List","_this","possibleConstructorReturn","getPrototypeOf","call","state","stories","page","_this2","query","queryString","parse","window","location","search","p","parseInt","listFunction","slice","all","map","getItem","setState","_this3","index","components_Item","Comment","showChildren","children","comments","c","i","marginLeft","textDecoration","cursor","onClick","kid","objectSpread","dangerouslySetInnerHTML","__html","text","renderChildren","ItemPage","components_Comment","Header","width","backgroundColor","height","display","alignItems","margin","marginRight","label","NavLink","activeStyle","exact","getLinkStyle","getInnerStyle","border","src","renderLink","UserPage","getUser","karma","created","about","App","BrowserRouter","components_Header","Switch","Route","path","component","components_List","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","document","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"6JAUYA,uGALCC,EAAW,GAAAC,OAFF,qCAEE,KAAAA,OADE,MAGpBC,EAA0C,GAC1CC,EAAqC,aAE/BJ,+KASZ,IAAMK,EAAY,CACjBL,EAAWM,WACXN,EAAWO,WACXP,EAAWQ,YACXR,EAAWS,WACXT,EAAWU,YACXV,EAAWW,YAGCC,EAAb,oBAAAA,IAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAA,OAAAC,OAAAG,EAAA,EAAAH,CAAAD,EAAA,OAAAK,IAAA,UAAAC,MAAA,eAAAC,EAAAN,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KAAA,SAAAC,EAEsBC,GAFtB,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAIM3B,EAAUsB,GAJhB,CAAAG,EAAAE,KAAA,eAAAF,EAAAG,OAAA,SAKUC,QAAQC,QAAQ9B,EAAUsB,KALpC,cAAAG,EAAAE,KAAA,EAQoBI,EAAWT,GAR/B,cAQQC,EARRE,EAAAO,KAWwC,IAAlCtB,OAAOuB,KAAKjC,GAAWkC,QAC1BhC,EAAUiC,QAAQ,SAAAC,GACbA,IAASd,GACbb,EAAM4B,QAAQD,KAIhBpC,EAAUsB,GAAQC,EAlBpBE,EAAAG,OAAA,SAmBSL,GAnBT,wBAAAE,EAAAa,SAAAjB,EAAAT,SAAA,gBAAA2B,GAAA,OAAAvB,EAAAwB,MAAA5B,KAAA6B,YAAA,KAAA3B,IAAA,UAAAC,MAAA,eAAA2B,EAAAhC,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KAAA,SAAAuB,EAsBsBC,GAtBtB,IAAArB,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,WAuBM1B,EAAU2C,GAvBhB,CAAAC,EAAAlB,KAAA,eAAAkB,EAAAjB,OAAA,SAwBUC,QAAQC,QAAQ7B,EAAU2C,KAxBpC,cAAAC,EAAAlB,KAAA,EA2BoBI,EAAU,QAAAhC,OAAS6C,IA3BvC,cA2BQrB,EA3BRsB,EAAAb,KA4BE/B,EAAU2C,GAAMrB,EA5BlBsB,EAAAjB,OAAA,SA6BSL,GA7BT,wBAAAsB,EAAAP,SAAAK,EAAA/B,SAAA,gBAAAkC,GAAA,OAAAJ,EAAAF,MAAA5B,KAAA6B,YAAA,KAAA3B,IAAA,UAAAC,MAAA,SAgCgB6B,GACd,OAAOb,EAAU,QAAAhC,OAAS6C,MAjC5B,CAAA9B,IAAA,aAAAC,MAAA,WAqCE,OAAOgB,EAAW,eArCpBtB,EAAA,YAyCesB,+EAAf,SAAAgB,EAA0BC,GAA1B,OAAA9B,EAAAC,EAAAK,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAArB,OAAA,SACQsB,MAAK,GAAAnD,OAAID,EAAJ,KAAAC,OAAmBiD,EAAnB,UAAmCG,KAAK,SAAA5B,GAAG,OAAIA,EAAI6B,UADhE,wBAAAH,EAAAX,SAAAS,EAAAnC,6DClCeyC,qLA3Bb,MAAO,CACNC,UAAW,6CAKZ,MAAO,CACNC,MAAO,yCAKR,IAAMC,EAAO5C,KAAK6C,MAAMD,KACxB,OACCE,EAAAvC,EAAAwC,cAAA,OAAKC,MAAOhD,KAAKiD,YAChBH,EAAAvC,EAAAwC,cAAA,KAAGG,KAAMN,EAAKO,KAAMP,EAAKQ,OACzBN,EAAAvC,EAAAwC,cAAA,OAAKC,MAAOhD,KAAKqD,eAChBP,EAAAvC,EAAAwC,cAAA,YAAOH,EAAKU,MAAZ,WACAR,EAAAvC,EAAAwC,cAAA,mBAAUD,EAAAvC,EAAAwC,cAACQ,EAAA,EAAD,CAAMP,MAAO,CAACL,MAAO,QAASa,GAAE,YAAArE,OAAcyD,EAAKa,KAAOb,EAAKa,KACzEX,EAAAvC,EAAAwC,cAAA,gBAAQW,MAAQC,KAAKD,IAAkB,IAAZd,EAAKgB,MAAc,QAA9C,cACAd,EAAAvC,EAAAwC,cAAA,kBAASD,EAAAvC,EAAAwC,cAACQ,EAAA,EAAD,CAAMP,MAAO,CAACL,MAAO,QAASa,GAAE,YAAArE,OAAcyD,EAAKZ,KAAOY,EAAKiB,KAAOjB,EAAKiB,KAAKvC,OAAS,EAAzF,uBAvBKwC,8BC8DJC,cAhDd,SAAAA,EAAYlB,GAAY,IAAAmB,EAAA,OAAAlE,OAAAC,EAAA,EAAAD,CAAAE,KAAA+D,IAEvBC,EAAAlE,OAAAmE,EAAA,EAAAnE,CAAAE,KAAAF,OAAAoE,EAAA,EAAApE,CAAAiE,GAAAI,KAAAnE,KAAM6C,KAEDuB,MAAQ,CACZC,QAAS,GACTC,KAAM,GANgBN,mFAUJ,IAAAO,EAAAvE,KACbwE,EAAQC,IAAYC,MAAMC,OAAOC,SAASC,QAC1CP,EAAOE,EAAMM,EAAwC,IAAnCC,SAASP,EAAMM,GAAe,GAAU,GACnD9E,KAAK6C,MAAMmC,aAAehF,KAAK6C,MAAMmC,aAAe,kBAAMnF,EAAM4B,QAAQxC,EAAWM,gBAIzFgD,KAAK,SAAAC,GACXA,EAAOA,EAAKyC,MAAMX,EAAMA,EAAO,IAC/BrD,QAAQiE,IAAI1C,EAAK2C,IAAI,SAAAnD,GAAE,OAAInC,EAAMuF,QAAQpD,MAAMO,KAAK,SAAA5B,GACnD4D,EAAKc,SAAS,CACbhB,QAAS1D,yCAOJ,IAAA2E,EAAAtF,KASR,OACC8C,EAAAvC,EAAAwC,cAAA,WAROuC,EAAKlB,MAAMC,QAAQc,IAAI,SAACvC,EAAM2C,GACpC,OACCzC,EAAAvC,EAAAwC,cAACyC,EAAD,CAAMtF,IAAKqF,EAAO3C,KAAMA,cAlCVkB,6CCqDJ2B,cAxDX,SAAAA,EAAY5C,GAAY,IAAAmB,EAAA,OAAAlE,OAAAC,EAAA,EAAAD,CAAAE,KAAAyF,IACpBzB,EAAAlE,OAAAmE,EAAA,EAAAnE,CAAAE,KAAAF,OAAAoE,EAAA,EAAApE,CAAA2F,GAAAtB,KAAAnE,KAAM6C,KACDuB,MAAQ,CACTsB,cAAc,EACdC,SAAU,IAJM3B,gFAQP,IAAAO,EAAAvE,KACP4C,EAAO5C,KAAK6C,MAAMD,KAGxB,GAFaA,EAAKiB,KAElB,CAIA,GAAI7D,KAAKoE,MAAMsB,cAAgB1F,KAAKoE,MAAMuB,SAAU,CAChD,IAAMC,EAAW5F,KAAKoE,MAAMuB,SAASR,IAAI,SAACU,EAAGC,GAAJ,OAAUhD,EAAAvC,EAAAwC,cAAC0C,EAAD,CAASvF,IAAK4F,EAAGlD,KAAMiD,MAC1E,OACI/C,EAAAvC,EAAAwC,cAAA,OAAKC,MAAO,CAAE+C,WAAY,SACrBH,GAKT,OAAO9C,EAAAvC,EAAAwC,cAAA,KAAGC,MAAO,CAAEL,MAAO,OAAQqD,eAAgB,YAAaC,OAAQ,WAAaC,QAAS,kBAAM3B,EAAKmB,iBAAiB9C,EAAKiB,KAAKvC,OAA5H,qDAIA,IAAAgE,EAAAtF,KACL6D,EAAO7D,KAAK6C,MAAMD,KAAKiB,KACZ5C,QAAQiE,IAAIrB,EAAKsB,IAAI,SAAAgB,GAAG,OAAItG,EAAMuF,QAAQe,MAClD5D,KAAK,SAAA5B,GACV2E,EAAKD,SAALvF,OAAAsG,EAAA,EAAAtG,CAAA,GACOwF,EAAKlB,MADZ,CAEIsB,cAAc,EACdC,SAAUhF,wCAOlB,IAAMiC,EAAO5C,KAAK6C,MAAMD,KACxB,OACIE,EAAAvC,EAAAwC,cAAA,WACID,EAAAvC,EAAAwC,cAAA,OAAKC,MAAO,CAAEL,MAAO,SAAWC,EAAKa,GAArC,IAA0CC,MAAQC,KAAKD,IAAkB,IAAZd,EAAKgB,MAAc,QAAhF,cACAd,EAAAvC,EAAAwC,cAAA,OAAKsD,wBAAyB,CAAEC,OAAQ1D,EAAK2D,QAC7CzD,EAAAvC,EAAAwC,cAAA,OAAKC,MAAO,CAAEN,UAAW,SAAW1C,KAAKwG,0BAlDnC1C,aC8CP2C,+LAjDO,IAAAzC,EAAAhE,KACdwE,EAAQC,IAAYC,MAAM1E,KAAK6C,MAAM+B,SAASC,QAC/CL,EAAMxC,IAA2B,iBAAZwC,EAAMxC,IAIhCnC,EAAMuF,QAAQL,SAASP,EAAMxC,KAAKO,KAAK,SAAAK,GAEtCoB,EAAKqB,SAALvF,OAAAsG,EAAA,EAAAtG,CAAA,GACI8C,IAGJ,IAAMiB,EAAOjB,EAAKiB,KAAKsB,IAAI,SAAAgB,GAAG,OAAItG,EAAMuF,QAAQe,KAEhDlF,QAAQiE,IAAIrB,GAAMtB,KAAK,SAAAqD,GACtB5B,EAAKqB,SAALvF,OAAAsG,EAAA,EAAAtG,CAAA,GACI8C,EADJ,CAECgD,mDAOH,IAAwBA,EAOxB,OAAK5F,KAAKoE,MAOTtB,EAAAvC,EAAAwC,cAAA,WACCD,EAAAvC,EAAAwC,cAACyC,EAAD,CAAM5C,KAAM5C,KAAKoE,QAChBpE,KAAKoE,MAAMmC,KAAOzD,EAAAvC,EAAAwC,cAAA,OAAKsD,wBAAyB,CAAEC,OAAQtG,KAAKoE,MAAMmC,QAAa,KACnFzD,EAAAvC,EAAAwC,cAAA,OAAKC,MAAO,CAAEN,UAAW,SACvB1C,KAAKoE,MAAMwB,UAlBSA,EAkBiB5F,KAAKoE,MAAMwB,UAlBGT,IAAI,SAACvC,EAAM2C,GAAP,OAC1DzC,EAAAvC,EAAAwC,cAAA,OAAK7C,IAAKqF,GACTzC,EAAAvC,EAAAwC,cAAC2D,EAAD,CAAS9D,KAAMA,IACd2C,IAAUK,EAAStE,OAAS,EAAIwB,EAAAvC,EAAAwC,cAAA,WAAS,QAeoB,OAT9DD,EAAAvC,EAAAwC,cAAA,gCAnCmBe,qBC0CR6C,qLA5CP,MAAO,CACHC,MAAO,OACPC,gBAAiB,UACjBC,OAAQ,gDAKZ,MAAO,CACHF,MAAO,QACPG,QAAS,OACTC,WAAY,SACZC,OAAQ,SACRH,OAAQ,+CAKZ,MAAO,CACHnE,MAAO,QACPuE,YAAa,2CAIV1D,EAAY2D,GACnB,OAAOrE,EAAAvC,EAAAwC,cAACqE,EAAA,EAAD,CAASC,YAAa,CAAE1E,MAAO,SAAW2E,OAAO,EAAM9D,GAAIA,EAAIR,MAAOhD,KAAKuH,gBAAiBJ,oCAInG,OACIrE,EAAAvC,EAAAwC,cAAA,UAAQC,MAAOhD,KAAKiD,YAChBH,EAAAvC,EAAAwC,cAAA,OAAKC,MAAOhD,KAAKwH,iBACb1E,EAAAvC,EAAAwC,cAAA,OAAKC,MAAO,CAAEyE,OAAQ,kBAAmBP,YAAa,QAAUQ,IAAI,yCACnE1H,KAAK2H,WAAW,IAAK,QACrB3H,KAAK2H,WAAW,OAAQ,OACxB3H,KAAK2H,WAAW,OAAQ,OACxB3H,KAAK2H,WAAW,QAAS,QACzB3H,KAAK2H,WAAW,QAAS,iBAvCzB7D,aCwCN8D,+LAlCU,IAAA5D,EAAAhE,KACXwE,EAAQC,IAAYC,MAAM1E,KAAK6C,MAAM+B,SAASC,QAC9CL,EAAMxC,IAA0B,iBAAZwC,EAAMxC,IAIhCnC,EAAMgI,QAAQrD,EAAMxC,IAAIO,KAAK,SAAAK,GACzBoB,EAAKqB,SAASzC,sCASlB,OAAK5C,KAAKoE,MAONtB,EAAAvC,EAAAwC,cAAA,OAAKC,MAAO,CAAEN,UAAW,SACrBI,EAAAvC,EAAAwC,cAAA,kBAAU/C,KAAKoE,MAAMpC,IACrBc,EAAAvC,EAAAwC,cAAA,qBAAa/C,KAAKoE,MAAM0D,OACxBhF,EAAAvC,EAAAwC,cAAA,uBAAe/C,KAAKoE,MAAM2D,SAC1BjF,EAAAvC,EAAAwC,cAAA,qBAAYD,EAAAvC,EAAAwC,cAAA,OAAKsD,wBAAyB,CAAEC,OAAQtG,KAAKoE,MAAM4D,WAT/DlF,EAAAvC,EAAAwC,cAAA,gCApBOe,aCgCRmE,qLA5Bb,MAAO,CACNrB,MAAO,QACPK,OAAQ,2CAKT,OACCnE,EAAAvC,EAAAwC,cAACmF,EAAA,EAAD,KACCpF,EAAAvC,EAAAwC,cAAA,WACCD,EAAAvC,EAAAwC,cAACoF,EAAD,MACArF,EAAAvC,EAAAwC,cAAA,QAAMC,MAAOhD,KAAKiD,YACjBH,EAAAvC,EAAAwC,cAACqF,EAAA,EAAD,KACCtF,EAAAvC,EAAAwC,cAACsF,EAAA,EAAD,CAAOf,OAAK,EAACgB,KAAK,IAAIC,UAAWxE,IACjCjB,EAAAvC,EAAAwC,cAACsF,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAW9B,IAC/B3D,EAAAvC,EAAAwC,cAACsF,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAWX,IAC/B9E,EAAAvC,EAAAwC,cAACsF,EAAA,EAAD,CAAOC,KAAK,OAAOC,UAAW,kBAAMzF,EAAAvC,EAAAwC,cAACyF,EAAD,CAAMxD,aAAc,kBAAMnF,EAAM4B,QAAQxC,EAAWO,kBACvFsD,EAAAvC,EAAAwC,cAACsF,EAAA,EAAD,CAAOC,KAAK,OAAOC,UAAW,kBAAMzF,EAAAvC,EAAAwC,cAACyF,EAAD,CAAMxD,aAAc,kBAAMnF,EAAM4B,QAAQxC,EAAWS,kBACvFoD,EAAAvC,EAAAwC,cAACsF,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAW,kBAAMzF,EAAAvC,EAAAwC,cAACyF,EAAD,CAAMxD,aAAc,kBAAMnF,EAAM4B,QAAQxC,EAAWU,mBACxFmD,EAAAvC,EAAAwC,cAACsF,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAW,kBAAMzF,EAAAvC,EAAAwC,cAACyF,EAAD,CAAMxD,aAAc,kBAAMnF,EAAM4B,QAAQxC,EAAWW,6BArB7EkE,aCGZ2E,EAAcC,QACW,cAA7B/D,OAAOC,SAAS+D,UAEe,UAA7BhE,OAAOC,SAAS+D,UAEhBhE,OAAOC,SAAS+D,SAASC,MACvB,2DA8CN,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTvG,KAAK,SAAA4G,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBjF,QACf4E,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,gHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KClGjEC,IAASC,OAAOlH,EAAAvC,EAAAwC,cAACkH,EAAD,MAASC,SAASC,eAAe,SDqB1C,SAAkBpB,GACvB,GAA6C,kBAAmBC,UAAW,CAMzE,GAJkB,IAAIoB,IACnBC,GACD1F,OAAOC,SAAS1B,MAEJoH,SAAW3F,OAAOC,SAAS0F,OAIvC,OAGF3F,OAAO4F,iBAAiB,OAAQ,WAC9B,IAAMzB,EAAK,GAAA3J,OAAMkL,GAAN,sBAEP5B,GAgEV,SAAiCK,EAAeC,GAE9CzG,MAAMwG,GACHvG,KAAK,SAAAiI,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C7B,UAAUC,cAAc6B,MAAMvI,KAAK,SAAA4G,GACjCA,EAAa4B,aAAaxI,KAAK,WAC7BoC,OAAOC,SAASoG,aAKpBnC,EAAgBC,EAAOC,KAG1Bc,MAAM,WACLJ,QAAQC,IACN,mEArFAuB,CAAwBnC,EAAOC,GAI/BC,UAAUC,cAAc6B,MAAMvI,KAAK,WACjCkH,QAAQC,IACN,+GAMJb,EAAgBC,EAAOC,MC/C/BE","file":"static/js/main.0039bfa3.chunk.js","sourcesContent":["import { IItem, IUser } from \"./interfaces\";\r\nimport { getMaxListeners } from \"cluster\";\r\n\r\nexport const apiUrl = \"https://hacker-news.firebaseio.com\";\r\nexport const apiVersion = \"v0\";\r\nexport const apiEndpoint = `${apiUrl}/${apiVersion}`;\r\n\r\nconst listCache: { [list: string]: number[] } = {}\r\nconst itemCache: { [id: number]: IItem } = {};\r\n\r\nexport enum EListTypes {\r\n\ttopstories = \"topstories\",\r\n\tnewstories = \"newstories\",\r\n\tbeststories = \"beststories\",\r\n\taskstories = \"askstories\",\r\n\tshowstories = \"showstories\",\r\n\tjobstories = \"jobstories\"\r\n}\r\n\r\nconst listTypes = [\r\n\tEListTypes.topstories,\r\n\tEListTypes.newstories,\r\n\tEListTypes.beststories,\r\n\tEListTypes.askstories,\r\n\tEListTypes.showstories,\r\n\tEListTypes.jobstories\r\n];\r\n\r\nexport class HNAPI {\r\n\r\n\tstatic async getList(type: EListTypes): Promise<number[]> {\r\n\r\n\t\tif (listCache[type]) {\r\n\t\t\treturn Promise.resolve(listCache[type]);\r\n\t\t}\r\n\r\n\t\tconst res = await apiRequest(type);\r\n\r\n\t\t// If this is our first list, resolve it then go ahead and pre-cache everything else.\r\n\t\tif (Object.keys(listCache).length === 0) {\r\n\t\t\tlistTypes.forEach(list => {\r\n\t\t\t\tif (list === type) return; // already getting this\r\n\t\t\t\tHNAPI.getList(list);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlistCache[type] = res;\r\n\t\treturn res;\r\n\t}\r\n\r\n\tstatic async getItem(id: number): Promise<IItem> {\r\n\t\tif (itemCache[id]) {\r\n\t\t\treturn Promise.resolve(itemCache[id]);\r\n\t\t}\r\n\r\n\t\tconst res = await apiRequest(`item/${id}`);\r\n\t\titemCache[id] = res;\r\n\t\treturn res;\r\n\t}\r\n\r\n\tstatic getUser(id: string): Promise<IUser> {\r\n\t\treturn apiRequest(`user/${id}`)\r\n\t}\r\n\r\n\tstatic getMaxItem(): Promise<number> {\r\n\t\treturn apiRequest(\"maxitem\");\r\n\t}\r\n}\r\n\r\nasync function apiRequest(request: string): Promise<any> {\r\n\treturn fetch(`${apiEndpoint}/${request}.json`).then(res => res.json());\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IItem } from '../hn/interfaces';\r\nimport dayjs from \"dayjs\";\r\n\r\nclass Item extends Component<{ item: IItem }, any> {\r\n\r\n\tgetStyle(): React.CSSProperties {\r\n\t\treturn {\r\n\t\t\tmarginTop: \"5px\"\r\n\t\t}\r\n\t}\r\n\r\n\tgetSubStyle(): React.CSSProperties {\r\n\t\treturn {\r\n\t\t\tcolor: \"#444\"\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst item = this.props.item;\r\n\t\treturn (\r\n\t\t\t<div style={this.getStyle()}>\r\n\t\t\t\t<a href={item.url}>{item.title}</a>\r\n\t\t\t\t<div style={this.getSubStyle()}>\r\n\t\t\t\t\t<span>{item.score} points</span>\r\n\t\t\t\t\t<span> by <Link style={{color: \"#444\"}} to={`/user?id=${item.by}`}>{item.by}</Link></span>\r\n\t\t\t\t\t<span> {dayjs().diff(dayjs(item.time * 1000), \"hour\")} hours ago</span>\r\n\t\t\t\t\t<span> | <Link style={{color: \"#444\"}} to={`/item?id=${item.id}`}>{item.kids ? item.kids.length : 0} comments</Link></span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Item;\r\n","import React, { Component } from 'react';\r\nimport { HNAPI, EListTypes } from '../hn/api';\r\nimport Item from './Item';\r\nimport { IItem } from '../hn/interfaces';\r\nimport queryString from \"query-string\";\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n\tlistFunction: () => Promise<number[]>;\r\n\tlocation?: any;\r\n}\r\n\r\ninterface IState {\r\n\tstories: IItem[];\r\n\tpage: number;\r\n}\r\n\r\nclass List extends Component<IProps, IState> {\r\n\r\n\tconstructor(props: any) {\r\n\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tstories: [],\r\n\t\t\tpage: 1\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst query = queryString.parse(window.location.search)\r\n\t\tconst page = query.p ? (parseInt(query.p as string) - 1) * 30 : 0\r\n\t\tconst data = this.props.listFunction ? this.props.listFunction : () => HNAPI.getList(EListTypes.topstories);\r\n\r\n\t\t\r\n\r\n\t\tdata().then(json => {\r\n\t\t\tjson = json.slice(page, page + 30);\r\n\t\t\tPromise.all(json.map(id => HNAPI.getItem(id))).then(res => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tstories: res\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst renderStories = () => {\r\n\t\t\treturn this.state.stories.map((item, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Item key={index} item={item} />\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{renderStories()}\r\n\t\t\t\t{/* <div>\r\n\t\t\t\t\t<Link to={{ pathname: window.location.pathname, search: `p=${this.state.page + 1}` }}>Next Page</Link>\r\n\t\t\t\t</div> */}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IItem } from '../hn/interfaces';\r\n\r\nimport dayjs from \"dayjs\";\r\nimport { HNAPI } from '../hn/api';\r\n\r\ninterface IState {\r\n    showChildren: boolean;\r\n    children: IItem[];\r\n}\r\n\r\nclass Comment extends Component<{ item: IItem }, IState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            showChildren: false,\r\n            children: []\r\n        }\r\n    }\r\n\r\n    renderChildren() {\r\n        const item = this.props.item;\r\n        const kids = item.kids;\r\n\r\n        if (!kids) {\r\n            return;\r\n        }\r\n\r\n        if (this.state.showChildren && this.state.children) {\r\n            const comments = this.state.children.map((c, i) => <Comment key={i} item={c} />);\r\n            return (\r\n                <div style={{ marginLeft: \"20px\" }}>\r\n                    {comments}\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return <a style={{ color: \"#444\", textDecoration: \"underline\", cursor: \"pointer\" }} onClick={() => this.showChildren()}>{item.kids.length} comments</a>;\r\n        }\r\n    }\r\n\r\n    showChildren() {\r\n        const kids = this.props.item.kids;\r\n        const comments = Promise.all(kids.map(kid => HNAPI.getItem(kid)));\r\n        comments.then(res => {\r\n            this.setState({\r\n                ...this.state,\r\n                showChildren: true,\r\n                children: res\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        const item = this.props.item;\r\n        return (\r\n            <div>\r\n                <div style={{ color: \"#444\" }}>{item.by} {dayjs().diff(dayjs(item.time * 1000), \"hour\")} hours ago</div>\r\n                <div dangerouslySetInnerHTML={{ __html: item.text }} />\r\n                <div style={{ marginTop: \"10px\" }}>{this.renderChildren()}</div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Comment;\r\n","import React, { Component } from 'react';\r\nimport queryString from \"query-string\";\r\nimport { HNAPI } from '../hn/api';\r\nimport { IItem } from '../hn/interfaces';\r\nimport Comment from \"./Comment\";\r\nimport Item from './Item';\r\n\r\nclass ItemPage extends Component<any, IItem> {\r\n\r\n\tcomponentWillMount() {\r\n\t\tconst query = queryString.parse(this.props.location.search)\r\n\t\tif (!query.id || !(typeof query.id == \"string\")) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tHNAPI.getItem(parseInt(query.id)).then(item => {\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\t...item\r\n\t\t\t});\r\n\r\n\t\t\tconst kids = item.kids.map(kid => HNAPI.getItem(kid));\r\n\r\n\t\t\tPromise.all(kids).then(comments => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t...item,\r\n\t\t\t\t\tcomments\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst renderComments = (comments: IItem[]) => comments.map((item, index) => (\r\n\t\t\t<div key={index} >\r\n\t\t\t\t<Comment item={item} />\r\n\t\t\t\t{index !== comments.length - 1 ? <hr /> : null}\r\n\t\t\t</div>\r\n\t\t));\r\n\r\n\t\tif (!this.state) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>loading...</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Item item={this.state} />\r\n\t\t\t\t{this.state.text ? <div dangerouslySetInnerHTML={{ __html: this.state.text }} /> : null}\r\n\t\t\t\t<div style={{ marginTop: \"10px\" }}>\r\n\t\t\t\t\t{this.state.comments ? renderComments(this.state.comments) : null}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ItemPage;\r\n","import React, { Component } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    getStyle(): React.CSSProperties {\r\n        return {\r\n            width: \"100%\",\r\n            backgroundColor: \"#ff6600\",\r\n            height: \"30px\"\r\n        }\r\n    }\r\n\r\n    getInnerStyle(): React.CSSProperties {\r\n        return {\r\n            width: \"800px\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            margin: \"0 auto\",\r\n            height: \"100%\"\r\n        }\r\n    }\r\n\r\n    getLinkStyle(): React.CSSProperties {\r\n        return {\r\n            color: \"black\",\r\n            marginRight: \"10px\"\r\n        }\r\n    }\r\n\r\n    renderLink(to: string, label: any) {\r\n        return <NavLink activeStyle={{ color: \"white\" }} exact={true} to={to} style={this.getLinkStyle()}>{label}</NavLink>;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header style={this.getStyle()}>\r\n                <div style={this.getInnerStyle()}>\r\n                    <img style={{ border: \"1px white solid\", marginRight: \"10px\" }} src=\"https://news.ycombinator.com/y18.gif\"></img>\r\n                    {this.renderLink(\"/\", \"YAHN\")}\r\n                    {this.renderLink(\"/new\", \"new\")}\r\n                    {this.renderLink(\"/ask\", \"ask\")}\r\n                    {this.renderLink(\"/show\", \"show\")}\r\n                    {this.renderLink(\"/jobs\", \"jobs\")}\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport queryString from \"query-string\";\r\nimport { HNAPI } from '../hn/api';\r\nimport { IItem, IUser } from '../hn/interfaces';\r\nimport Comment from \"./Comment\";\r\nimport { number } from 'prop-types';\r\n\r\nclass UserPage extends Component<any, IUser> {\r\n\r\n    componentWillMount() {\r\n        const query = queryString.parse(this.props.location.search)\r\n        if (!(query.id && (typeof query.id == \"string\"))) {\r\n            return;\r\n        }\r\n\r\n        HNAPI.getUser(query.id).then(item => {\r\n            this.setState(item);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const renderComments = (comments: IItem[]) => comments.map((item, index) => (\r\n            <Comment item={item} key={index} />\r\n        ));\r\n\r\n        if (!this.state) {\r\n            return (\r\n                <div>loading...</div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div style={{ marginTop: \"10px\" }}>\r\n                <div>id: {this.state.id}</div>\r\n                <div>karma: {this.state.karma}</div>\r\n                <div>created: {this.state.created}</div>\r\n                <div>about: <div dangerouslySetInnerHTML={{ __html: this.state.about }} /></div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserPage;\r\n","import React, { Component } from 'react';\r\nimport List from './List';\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport ItemPage from './ItemPage';\r\nimport Header from './Header';\r\nimport UserPage from './UserPage';\r\nimport { HNAPI, EListTypes } from '../hn/api';\r\n\r\nclass App extends Component {\r\n\tgetStyle(): React.CSSProperties {\r\n\t\treturn {\r\n\t\t\twidth: \"800px\",\r\n\t\t\tmargin: \"0 auto\"\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Router>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<main style={this.getStyle()}>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={List} />\r\n\t\t\t\t\t\t\t<Route path=\"/item\" component={ItemPage} />\r\n\t\t\t\t\t\t\t<Route path=\"/user\" component={UserPage} />\r\n\t\t\t\t\t\t\t<Route path=\"/new\" component={() => <List listFunction={() => HNAPI.getList(EListTypes.newstories)} />} />\r\n\t\t\t\t\t\t\t<Route path=\"/ask\" component={() => <List listFunction={() => HNAPI.getList(EListTypes.askstories)} />} />\r\n\t\t\t\t\t\t\t<Route path=\"/show\" component={() => <List listFunction={() => HNAPI.getList(EListTypes.showstories)} />} />\r\n\t\t\t\t\t\t\t<Route path=\"/jobs\" component={() => <List listFunction={() => HNAPI.getList(EListTypes.jobstories)} />} />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}